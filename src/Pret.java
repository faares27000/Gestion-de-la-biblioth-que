
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fares
 */
public class Pret extends javax.swing.JFrame {

    /**
     * Creates new form R_search
     */
    public Pret() {
        initComponents();
        setDefaultCloseOperation(Pret.DISPOSE_ON_CLOSE);
        Display_table();
        setIcon();
    }
    
    private void Display_table(){
    
    Connection con = null;
    Statement st = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    String query = "SELECT * FROM pret";
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bibliotheque","root","");
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            R_table.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(SQLException ex){
            System.out.println("Error: "+ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        R_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        id_P = new javax.swing.JTextField();
        id_C = new javax.swing.JTextField();
        n_ordre = new javax.swing.JTextField();
        InsertPret = new javax.swing.JLabel();
        UpdatePret = new javax.swing.JLabel();
        Delete = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Text1 = new javax.swing.JLabel();
        categorie_P = new javax.swing.JComboBox<>();
        Reset = new javax.swing.JLabel();
        date_P = new com.toedter.calendar.JDateChooser();
        date_R = new com.toedter.calendar.JDateChooser();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(" Gestion de la bibliothèque");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        R_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_pret", "date_pret", "date_restitution", "categorie_pret", "identifient_pret", "n_ordre"
            }
        ));
        R_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(R_table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 75, 440, 320));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Id Prêt:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 20));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Identifiant de la catégorie:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Catégorie de prêt:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Date de prêt:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Date de restitution:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        id_P.setBackground(new java.awt.Color(204, 204, 204));
        id_P.setEnabled(false);
        getContentPane().add(id_P, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 140, -1));

        id_C.setBackground(new java.awt.Color(204, 204, 204));
        getContentPane().add(id_C, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 140, -1));

        n_ordre.setBackground(new java.awt.Color(204, 204, 204));
        getContentPane().add(n_ordre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 140, -1));

        InsertPret.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Add.png"))); // NOI18N
        InsertPret.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InsertPretMouseClicked(evt);
            }
        });
        getContentPane().add(InsertPret, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        UpdatePret.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Update.png"))); // NOI18N
        UpdatePret.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdatePretMouseClicked(evt);
            }
        });
        getContentPane().add(UpdatePret, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, -1, -1));

        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Delete.png"))); // NOI18N
        Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteMouseClicked(evt);
            }
        });
        getContentPane().add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Numéro d'ordre d'emprenteur:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        Text1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        Text1.setForeground(new java.awt.Color(255, 255, 255));
        Text1.setText("Prêt");
        getContentPane().add(Text1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 30));

        categorie_P.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "livres", "memoires" }));
        getContentPane().add(categorie_P, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 140, -1));

        Reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Delete_1.png"))); // NOI18N
        Reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResetMouseClicked(evt);
            }
        });
        getContentPane().add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, -1, -1));

        date_P.setDateFormatString("dd/MM/yyyy");
        getContentPane().add(date_P, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 140, -1));

        date_R.setDateFormatString("dd/MM/yyyy");
        getContentPane().add(date_R, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 160, 140, -1));

        Background.setBackground(new java.awt.Color(204, 204, 204));
        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Background.jpg"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertPretMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InsertPretMouseClicked
        
        int i = 0,j = 0;
        if(    date_P.getDate() == null 
            || date_R.getDate() == null
            || id_C.getText().equals("")
            || n_ordre.getText().equals("")) {
            
            JOptionPane.showMessageDialog(null, "Un ou plusieurs champs sont vides");
            
        }else{
            int n_o = Integer.parseInt(n_ordre.getText());
            int id_c = Integer.parseInt(id_C.getText());

            try {
                j = DB_Managing.checkRight(n_o);
            } catch (SQLException ex) {
                Logger.getLogger(F_S_L.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(j != 0){
                try {               
                    i = DB_Managing.check(n_o, id_c, (String) categorie_P.getSelectedItem());
                } catch (SQLException ex) {
                    Logger.getLogger(Pret.class.getName()).log(Level.SEVERE, null, ex);
                }

                if(i != 0){
                    int idC = Integer.parseInt(id_C.getText());
                    int nOrdre = Integer.parseInt(n_ordre.getText());
                    String Categorie_P =  (String) categorie_P.getSelectedItem();
                    Date date = date_P.getDate();
                    java.sql.Date sgldate = new java.sql.Date(date.getTime());            
                    Date date2 = date_R.getDate();
                    java.sql.Date sgldate2 = new java.sql.Date(date2.getTime()); 

                    try {
                        DB_Managing.InsertPret(sgldate, sgldate2, Categorie_P, idC, nOrdre);
                    } catch (SQLException ex) {
                        Logger.getLogger(Pret.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Display_table();
                }
            }else{
                JOptionPane.showMessageDialog(null, "Cet emprunteur n'existe pas!");
            }
        }
    }//GEN-LAST:event_InsertPretMouseClicked

    private void UpdatePretMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdatePretMouseClicked
        
        if(    date_P.getDate().equals("") 
            || date_R.getDate().equals("") 
            || id_P.getText().equals("")
            || n_ordre.getText().equals("")) {
            
            JOptionPane.showMessageDialog(null, "Un ou plusieurs champs sont vides");
            }else{
            int idPret = Integer.parseInt(id_P.getText());
            int idC = Integer.parseInt(id_C.getText());
            int nOrdre = Integer.parseInt(n_ordre.getText());
            String Categorie_P =  (String) categorie_P.getSelectedItem();
            Date date = date_P.getDate();
            java.sql.Date sgldate = new java.sql.Date(date.getTime());            
            Date date2 = date_R.getDate();
            java.sql.Date sgldate2 = new java.sql.Date(date.getTime()); 
            
            try {
                DB_Managing.UpdatePret(idPret, sgldate, sgldate2, Categorie_P, idC, nOrdre);
            } catch (SQLException ex) {
                Logger.getLogger(Pret.class.getName()).log(Level.SEVERE, null, ex);
            }
            Display_table();
                    }
    }//GEN-LAST:event_UpdatePretMouseClicked

    private void DeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseClicked
        
        if(id_P.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Le champ numéro Id Prêt est vides");
        }else{
            int idP = Integer.parseInt(id_P.getText());
            int idC = Integer.parseInt(id_C.getText());
            String categorie_p = (String) categorie_P.getSelectedItem();
            DB_Managing.DeletePret(idP, idC, categorie_p); 
            Display_table();
        }
    }//GEN-LAST:event_DeleteMouseClicked

    private void R_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R_tableMouseClicked

        try {
            DefaultTableModel model = (DefaultTableModel) R_table.getModel();
            int selectedRowIndex = R_table.getSelectedRow();
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedRowIndex, 1).toString());
            Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedRowIndex, 2).toString());
            id_P.setText(model.getValueAt(selectedRowIndex, 0).toString());   
            date_P.setDate(date);
            date_R.setDate(date2);
            categorie_P.setSelectedItem(model.getValueAt(selectedRowIndex, 3).toString());
            id_C.setText(model.getValueAt(selectedRowIndex, 4).toString());
            n_ordre.setText(model.getValueAt(selectedRowIndex, 5).toString());            
        } catch (ParseException ex) {
            Logger.getLogger(Pret.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_R_tableMouseClicked

    private void ResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetMouseClicked
        id_P.setText(null);
        date_P.setDate(null);
        date_R.setDate(null);
        id_C.setText(null);
        n_ordre.setText(null);
    }//GEN-LAST:event_ResetMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JLabel Delete;
    private javax.swing.JLabel InsertPret;
    private javax.swing.JTable R_table;
    private javax.swing.JLabel Reset;
    private javax.swing.JLabel Text1;
    private javax.swing.JLabel UpdatePret;
    private javax.swing.JComboBox<String> categorie_P;
    private com.toedter.calendar.JDateChooser date_P;
    private com.toedter.calendar.JDateChooser date_R;
    private javax.swing.JTextField id_C;
    private javax.swing.JTextField id_P;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField n_ordre;
    // End of variables declaration//GEN-END:variables
    private void setIcon(){
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Pictures/Library.png")));
    }
}
